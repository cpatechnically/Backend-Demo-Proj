{"version":3,"sources":["modules/survey/data lazy /^/survey_.*/.json$/ groupOptions: {} namespace object","modules/vidly/components/common/listGroup.jsx","modules/vidly/components/common/tableHeader.jsx","modules/vidly/components/common/tableBody.jsx","modules/vidly/components/common/table.jsx","modules/vidly/components/common/like.jsx","modules/vidly/components/moviesTable.jsx","modules/vidly/components/common/searchBox.jsx","modules/vidly/components/common/pagination.jsx","modules/vidly/services/authService.js","modules/vidly/services/httpService.js","modules/vidly/services/movieService.js","modules/vidly/services/genreService.js","modules/vidly/utils/paginate.js","modules/vidly/components/movies.jsx","modules/vidly/components/common/input.jsx","modules/vidly/components/common/select.jsx","modules/vidly/components/common/form.jsx","modules/vidly/services/fakeGenreService.js","modules/vidly/services/fakeMovieService.js","modules/vidly/components/movieForm.jsx","modules/vidly/components/common/navbar.jsx","modules/vidly/components/home.jsx","modules/vidly/services/userService.js","modules/vidly/components/registerForm.jsx","modules/vidly/components/notFound.jsx","modules/vidly/components/loginForm.jsx","modules/vidly/components/customers.jsx","modules/vidly/components/logout.jsx","modules/vidly/components/rentals.jsx","modules/vidly/VidlyApp.js","modules/survey/survey/validators.js","modules/survey/survey/component.js","modules/survey/survey/inputs.js","modules/survey/survey/hooks.js","modules/survey/SurveyApp.js","modules/routingdemo/components/navbar.jsx","modules/routingdemo/components/products.jsx","modules/routingdemo/components/posts.jsx","modules/routingdemo/components/home.jsx","modules/routingdemo/components/admin/dashboard.jsx","modules/routingdemo/RouteDemoApp.js","modules/routingdemo/components/productDetails.jsx","modules/posts/PostInline.js","modules/posts/posts.js","modules/posts/PostForm.js","modules/posts/PostDetail.js","modules/posts/PostCreate.js","modules/posts/PostsApp.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","ListGroup","props","items","textProperty","valueProperty","selectedItem","onItemSelect","className","item","onClick","defaultProps","TableHeader","raiseSort","path","sortColumn","console","log","order","onSort","renderSortIcon","column","this","columns","label","key","Component","TableBody","renderCell","content","_","get","createKey","_id","data","Table","Like","classes","liked","style","cursor","MoviesTable","movie","to","title","onLike","onDelete","movies","SearchBox","value","onChange","type","name","placeholder","currentTarget","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","serviceEndpoint","apiEndpoint","login","email","password","http","post","axios","interceptors","response","use","error","status","alert","reject","ep","apiEp","put","delete","collection","movieUrl","deleteMovie","movieId","paginate","pageNumber","startIndex","slice","take","Movies","state","genres","searchQuery","selectedGenre","handleDelete","a","originalMovies","filter","m","setState","ex","toast","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","marginBottom","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","numberInStock","dailyRentalRate","publishDate","getMovie","find","saveMovie","movieInDb","genresAPI","g","genreId","Date","now","toString","push","MovieForm","string","required","number","min","max","saveData","history","match","params","mapToViewModel","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","NavBar","djurl","Home","apiurl","register","user","username","RegisterForm","userService","NotFound","LoginForm","jwt","localStorage","setItem","Customers","Rentals","VidlyApp","component","from","exact","verifyTextInputType","inputType","Survey","useState","setPage","isFinalPage","setIsFinalPage","surveyValues","setSurveyValues","loadedInputs","setLoadedInputs","surveyId","useEffect","default","inputs","inputOption","event","persist","target","elements","formInput","values","call","selected","checked","nextPage","inputKey","object","SurveySelectInput","multiple","hidden","optionClassName","SurveyRadioInput","SurveyTextInput","customValue","callback","setValue","newValue","useInputChange","defaultValue","triggerCallback","inputProps","requred","SurveyApp","href","Products","products","product","Posts","Dashboard","RouteDemoApp","PostInline","elClass","showContent","undefined","togglePostListClass","bind","handleNewPost","loadMorePosts","posts","postsListClass","next","previous","author","loadPosts","nextEndpoint","endpoint","thisComp","lookupOptions","method","headers","csrfToken","cookie","load","fetch","json","responseData","concat","results","postItemData","currentPosts","unshift","maintainScrollPosition","pathname","fromDashboard","postItem","PostForm","handleInputChange","handleDraftChange","clearForm","postTitleRef","React","createRef","postContentRef","draft","publish","body","JSON","stringify","credentials","newPostItemCreated","defaultState","catch","slug","postItemUpdated","updatePost","postCreateForm","reset","current","moment","format","ref","el","for","PostDetail","handlePostItemUpdated","doneLoading","detail","loadPost","owner","PostCreate","PostsApp","vidlyAppEl","document","getElementById","ReactDOM","render","surveyAppEl","routingDemoEl","postsAppEl"],"mappings":"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","file":"static/js/main.d02311f3.chunk.js","sourcesContent":["var map = {\n\t\"./survey_1.json\": [\n\t\t88,\n\t\t3\n\t],\n\t\"./survey_2.json\": [\n\t\t89,\n\t\t4\n\t],\n\t\"./survey_3.json\": [\n\t\t90,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 84;\nmodule.exports = webpackAsyncContext;","import React from 'react';\r\n\r\nconst ListGroup = props => {\r\n    //props of the pagination obj\r\n    const { items, textProperty, valueProperty, selectedItem, onItemSelect } = props;\r\n\r\n    return ( \r\n        <ul className=\"list-group\">\r\n            {items.map(item => (\r\n                <li onClick={() => onItemSelect(item)} \r\n                    key={item[valueProperty]} \r\n                    className={ item === selectedItem ? \"list-group-item active\": \"list-group-item\"\r\n                    }\r\n                >\r\n                    {item[textProperty]}\r\n                </li> \r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\n//Default Props\r\nListGroup.defaultProps = {\r\n    textProperty: \"name\",\r\n    valueProperty: \"_id\"\r\n}\r\n \r\nexport default ListGroup;\r\n","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = path => {\r\n        //has the log of determining the sort order\r\n        //clone the sort column OBJECT\r\n        const sortColumn = {...this.props.sortColumn};\r\n        console.log('sortColumns: ',sortColumn)\r\n        //if you click on the current column again it should implement reverse\r\n        if (sortColumn.path === path)\r\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc': 'asc';\r\n        else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = 'asc';\r\n        }\r\n        //Raise a sort event\r\n        this.props.onSort(sortColumn);\r\n        //console.log('raise sort',sortColumn);\r\n        console.log('sortColumns: ',sortColumn)\r\n    };\r\n    renderSortIcon = column => {\r\n        //export sortColumn property of this.props\r\n        console.log('Column: ',column.path)\r\n        const { sortColumn } = this.props;\r\n        console.log('tableHeader',sortColumn)\r\n\r\n        if (column.path !== sortColumn.path) return null;\r\n        // return <i className=\"fa fa-sort-asc\"/>;\r\n\r\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"/>;\r\n        return <i className=\"fa fa-sort-desc\"/>;\r\n    }\r\n    \r\n    render() { \r\n        return ( <thead>\r\n                <tr>\r\n                    { this.props.columns.map(column => (\r\n                        <th \r\n                            className=\"clickable\"\r\n                            key={column.path || column.key} \r\n                            onClick={() => this.raiseSort(column.path)}\r\n                        >\r\n                            {column.label} {this.renderSortIcon(column)}\r\n                        </th>\r\n                        ))}\r\n                </tr>\r\n        </thead>\r\n        );\r\n    }\r\n}\r\n \r\nexport default TableHeader;\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n    renderCell = (item,column) => {\r\n        //see productsTable refer to the delete button/content function\r\n        if (column.content) return column.content(item)\r\n        else {\r\n            return _.get(item, column.path);\r\n        }\r\n    };\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key)\r\n    }\r\n    render() { \r\n        const { data,columns } = this.props;\r\n        console.log('data',data, 'Columns:',columns)\r\n\r\n        return ( \r\n            <tbody>\r\n                {data.map(item => (\r\n                    <tr key={item._id}>\r\n                        {columns.map(column => (\r\n                            <td key={this.createKey(item, column)}>\r\n                                {this.renderCell(item, column)}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody> \r\n        );\r\n    }\r\n}\r\n \r\nexport default TableBody;\r\n\r\n","import React from 'react';\r\nimport TableHeader from './tableHeader';\r\nimport TableBody from './tableBody'\r\n\r\nconst Table = props => {\r\n    //object destructuring to extract the props we want from ...\r\n    const { columns, sortColumn, onSort, data} = props;\r\n    console.log('data:',data,'Columns:',columns,'sortColumn:',sortColumn,'onSort:',onSort)\r\n\r\n    return ( \r\n        <table className=\"table\">\r\n            <TableHeader \r\n                columns={columns} \r\n                sortColumn={sortColumn} \r\n                onSort={onSort}\r\n            />\r\n            <TableBody columns={columns} data={data} />\r\n\r\n        </table>\r\n    );\r\n}\r\n \r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nconst Like = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if (!props.liked) classes += \"-o\";\r\n    return (\r\n        <i \r\n        onClick={props.onClick} \r\n        style={{ cursor: \"pointer\"}} \r\n        className={classes} \r\n        aria-hidden=\"true\"/>\r\n    )\r\n}\r\n \r\nexport default Like;","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from './common/table';\r\nimport Like from \"./common/like\";\r\n\r\nclass MoviesTable extends Component {\r\n    columns = [\r\n        { path: 'title', \r\n            label: 'Title', \r\n            content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> \r\n        },\r\n        { path: 'genre.name', label: 'Genre' },\r\n        { path: 'numberInStock', label: 'Stock' },\r\n        { path: 'dailyRentalRate', label: 'Rate' },\r\n        //every item is required to have a unique ID b/c being used in the map method\r\n        { \r\n            key: \"like\", \r\n            content: movie => (\r\n            <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n            )\r\n        },\r\n        { key: \"delete\",\r\n            //changed the button to a function here so we don't get an error\r\n            content: movie => (\r\n                <button \r\n                onClick={() => this.props.onDelete(movie)} \r\n                className=\"btn btn-danger btn-sm\"\r\n                >\r\n                    Delete\r\n                </button>\r\n            )\r\n        },\r\n    ]    \r\n\r\n    render () {\r\n        const {movies, onSort, onDelete, sortColumn } = this.props;\r\n\r\n        return (\r\n            <Table \r\n                columns={this.columns} \r\n                data={movies} \r\n                sortColumn={sortColumn} \r\n                onSort={onSort}\r\n                onDelete={onDelete}\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\n\r\n\r\n \r\nexport default MoviesTable;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n    return (  \r\n        <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            className=\"form-control my-3\"\r\n            placeholder=\"Search...\"\r\n            value={value}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n    );\r\n}\r\n \r\nexport default SearchBox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport _ from 'lodash';\r\n\r\nconst Pagination = props => {\r\n    //props of the pagination obj\r\n    const {itemsCount, pageSize, currentPage, onPageChange } = props;\r\n    console.log('pagination: ',currentPage, pageSize,itemsCount)\r\n    //https://www.w3schools.com/js/js_math.asp\r\n    //props of the pagination obj\r\n    const pagesCount = Math.ceil(itemsCount / pageSize);\r\n    console.log('page count',pagesCount)\r\n    if (pagesCount === 1) return null;\r\n    //add one to make sure that the last # is always included\r\n    const pages = _.range(1, pagesCount + 1)\r\n\r\n    return ( \r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map(page => (\r\n                    <li \r\n                        key={page} \r\n                        className={page === currentPage ? 'page-item active' : 'page-item'}\r\n                    >\r\n                        <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n     );\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired, \r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n};\r\n \r\nexport default Pagination;\r\n","import http from \"./httpService\";\r\nimport { apiEndpoint } from \"../config.json\";\r\n\r\nconst serviceEndpoint = apiEndpoint + \"/auth\";\r\n\r\nexport function login(email, password) {\r\n  return http.post(serviceEndpoint, { email, password });\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem();\r\n}\r\n\r\nexport default {\r\n  login,\r\n  //getJwt,\r\n};\r\n","import axios from \"axios\";\r\nimport auth from \"./authService\";\r\n\r\n//axios.defaults.headers.common[\"x-auth-token\"] = auth.getJwt();\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    //console.log(\"Logging the error\", error);\r\n    alert(\"An unexpected error occured.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","import http from \"./httpService\";\r\nimport {apiEndpoint} from '../config.json';\r\n\r\nconst collection = `${apiEndpoint}/vidly`\r\nlet ep\r\nlet apiEp\r\n\r\nfunction movieUrl(id) {\r\n  ep = \"/movies/\"\r\n  apiEp = `${collection}${ep}`\r\n  return `${apiEp}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  ep = \"/movies/\"\r\n  apiEp = `${collection}${ep}`\r\n  console.log(\"get movies apiEp\",apiEp)\r\n  return http.get(apiEp);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  ep = \"/movies/\"\r\n  apiEp = `${collection}${ep}`\r\n  if (movie.id) {\r\n    const body = { ...movie };\r\n    delete body.id;\r\n    console.log(body, movie.id, apiEp);\r\n    return http.put(movieUrl(movie.id), body);\r\n  }\r\n\r\n  return http.post(apiEp, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\nimport { apiEndpoint } from \"../config.json\";\r\n\r\nconst collection = `${apiEndpoint}/vidly`\r\nlet ep\r\nlet apiEp\r\n\r\nexport function getGenres() {\r\n  ep = \"/genre/\"\r\n  apiEp = `${collection}${ep}`\r\n  return http.get(apiEp);\r\n}\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value()\r\n}","import React, { Component } from 'react';\r\nimport ListGroup from './common/listGroup';\r\nimport MoviesTable from './moviesTable';\r\nimport SearchBox from './common/searchBox';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport Pagination from './common/pagination';\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreService';\r\n//import { getMovies, deleteMovie,getMovie,saveMovie } from '../services/movieService';\r\n//import { getGenres } from '../services/genreService';\r\nimport { paginate } from '../utils/paginate';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\n\r\nclass Movies extends Component {\r\n    //State mods\r\n    state = { \r\n        movies: [],\r\n        genres: [],\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        searchQuery: \"\",\r\n        selectedGenre: null,\r\n        sortColumn: { path: 'title', order: 'asc'}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { data } = await getGenres();\r\n        //const data = getGenres();\r\n        const genres = [{id:'', name: 'All Genres' }, ...data];\r\n        console.log(\"genres\",genres)\r\n        const { data: movies } = await getMovies();\r\n        //const movies = getMovies();\r\n        console.log(\"movies\",movies)\r\n        this.setState({ movies, genres });\r\n    }\r\n    //local method\r\n\r\n    handleDelete = async movie => {\r\n        const originalMovies = this.state.movies;\r\n        const movies = originalMovies.filter(m => m.id !== movie.id);\r\n        this.setState({ movies });\r\n\r\n        try {\r\n            //await deleteMovie(movie.id);\r\n            deleteMovie(movie.id);\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                toast.error(\"this movie has already been deleted\")\r\n\r\n            this.setState({ movies: originalMovies})\r\n        }\r\n    };\r\n\r\n    handleLike = movie => {\r\n        console.log('hanlde like',movie)\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = {...movies[index]};\r\n        movies[index].liked = !movies[index].liked;\r\n        this.setState({ movies });\r\n    }\r\n\r\n    handlePageChange = page => {\r\n        console.log('current page',page);\r\n        this.setState({ currentPage: page});\r\n    }\r\n\r\n    handleGenreSelect = genre => {\r\n        // update the current page so the genre selection knows the page we are on\r\n        this.setState({ selectedGenre: genre, searchQuery: '', currentPage: 1});\r\n    }\r\n\r\n    handleSearch = query => {\r\n        // update the current page so the genre selection knows the page we are on\r\n        this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1});\r\n    }\r\n\r\n    handleSort = sortColumn => {\r\n        //sort column object\r\n        //this.setState({ sortColumn });\r\n    }\r\n\r\n    getPagedData = () => {\r\n        const { \r\n            pageSize, \r\n            currentPage, \r\n            sortColumn, \r\n            selectedGenre, \r\n            searchQuery,\r\n            movies: allMovies,\r\n        } = this.state;\r\n\r\n        //filter the data\r\n        let filtered = allMovies;\r\n        if (searchQuery)\r\n            filtered = allMovies.filter(m =>\r\n                m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n            );\r\n        else if (selectedGenre && selectedGenre.id)\r\n        filtered = allMovies.filter(m => m.genre.id === selectedGenre.id) \r\n                \r\n        //sort data\r\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n        \r\n        //then paginate\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n        \r\n        return { totalCount: filtered.length, data: movies };\r\n\r\n    }\r\n\r\n    //Render function\r\n    render() {\r\n        const { length: count } = this.state.movies;\r\n        const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n\r\n        if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n        const { totalCount, data: movies } = this.getPagedData();\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <ToastContainer/>\r\n                <div className=\"col-3\">\r\n                    <ListGroup \r\n                    items={this.state.genres}\r\n                    selectedItem={this.state.selectedGenre}\r\n                    onItemSelect={this.handleGenreSelect}\r\n                    />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <Link \r\n                        to=\"/movies/new\"\r\n                        className=\"btn btn-primary\"\r\n                        style={{ marginBottom: 20}}\r\n                    >\r\n                        New Movie\r\n                    </Link>\r\n                    <p>Showing {totalCount} movies in the database.</p>\r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n                    <MoviesTable \r\n                        movies={movies}\r\n                        sortColumn={sortColumn}\r\n                        onLike={this.handleLike}\r\n                        onDelete={this.handleDelete}\r\n                        onSort={this.handleSort}\r\n                    />\r\n                    <Pagination \r\n                        itemsCount={totalCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        //Events\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n                \r\n        );\r\n    }\r\n}\r\n \r\nexport default Movies;","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return (  \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                {...rest}\r\n                id={name}\r\n                name={name}\r\n                className=\"form-control\"\r\n            />\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return (  \r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\"/>\r\n                {options ? options.map(option => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                )):\"\"}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n    state = { \r\n        data: {},\r\n        errors: {}\r\n    };\r\n\r\n    validate = () => {\r\n        const options = { abortEarly: false };\r\n        const { error } = Joi.validate(this.state.data, this.schema, options);\r\n        if (!error) return null;\r\n\r\n        const errors = {};\r\n        //can also use the map method to map the details\r\n        for (let item of error.details) errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = ({name,value}) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj,schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n\r\n        this.doSubmit();\r\n    };\r\n\r\n    handleChange = ({ currentTarget: input}) => {\r\n        const errors = {...this.state.errors};\r\n        const errorMessage = this.validateProperty(input);\r\n        if (errorMessage) errors[input.name] = errorMessage;\r\n        else delete errors[input.name];\r\n\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n\r\n        this.setState({ data, errors });\r\n    };\r\n\r\n    renderButton(label) {\r\n        return (\r\n            <button \r\n                disabled={this.validate()}\r\n                className=\"btn btn-primary\"\r\n            >\r\n                {label}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    renderSelect(name, label, options) {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            <Select\r\n                name={name}\r\n                value={data[name] ? data[name] : []}\r\n                label={label}\r\n                options={options}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderInput(name, label, type = \"text\") {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            <Input\r\n                type={type}\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                onChange={this.handleChange}\r\n                error={errors[name]}\r\n            />\r\n        );\r\n    }\r\n}\r\n \r\nexport default Form;","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres; //.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { getMovie, saveMovie, deleteMovie } from '../services/fakeMovieService';\r\nimport { getGenres } from '../services/fakeGenreService';\r\n\r\nclass MovieForm extends Form {\r\n    state = { \r\n        data: { \r\n            title: \"\", \r\n            genreId: \"\",\r\n            numberInStock: \"\",\r\n            dailyRentalRate: \"\",\r\n        },\r\n        genres: [],\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n            .required()\r\n            .label('Title'),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label('Genre'),\r\n        numberInStock: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(100)\r\n            .label('Number in Stock'),\r\n        dailyRentalRate: Joi.number()\r\n            .required()\r\n            .min(0)\r\n            .max(10)\r\n            .label('Daily Rental Rate'),\r\n    };\r\n\r\n\r\n    async populateGenres() {\r\n        const {data: genres } = await getGenres();\r\n        this.setState({ genres });\r\n    }\r\n\r\n    async populateMovie() {\r\n        console.log(\"props\",this.props.match)\r\n        try {\r\n            const movieId = this.props.match.params.id;\r\n            if (movieId === 'new') return;\r\n\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) });\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                this.props.history.replace(\"/not-found\");\r\n        }       \r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.populateGenres();\r\n        await this.populateMovie();\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        };\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        //Call the server\r\n        const saveData = this.state.data\r\n        console.log('submit data',saveData)\r\n        await saveMovie(saveData);\r\n        this.props.history.push(\"/movies\");\r\n    };\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Movie Form</h1>         \r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('title', 'Title')}\r\n                    {this.renderSelect('genreId', 'Genre',this.state.genres)}\r\n                    {this.renderInput('numberInStock', 'Number in Stock', \"number\")}\r\n                    {this.renderInput('dailyRentalRate', 'Rate')}\r\n                    {this.renderButton(\"Save\")}\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieForm;","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst NavBar = (props) => {\r\n    const djurl = props.djurl ? props.djurl : \"/\"\r\n    console.log('NavBar - Rendered')\r\n    return ( \r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link className=\"navbar-brand\" to={`${djurl}`}>\r\n                Vidly\r\n            </Link>\r\n            <button\r\n                className=\"navbar-toggler\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarNavAltMarkup\"\r\n                aria-controls=\"navbarNavAltMarkup\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/home`}>\r\n                        Home\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/movies`}>\r\n                        Movies\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/admin`}>\r\n                        Dashboard\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/customers`}>\r\n                        Customers\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/rentals`}>\r\n                        Rentals\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/login`}>\r\n                        Login\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/register`}>\r\n                        Register\r\n                    </NavLink>\r\n                    <NavLink className=\"nav-item nav-link\" to={`${djurl}/logout`}>\r\n                        Logout\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n  return <h1>Home</h1>;\r\n};\r\n\r\nexport default Home;\r\n","import http from \"./httpService\";\r\nimport apiurl from '../config.json';\r\n\r\nconst serviceEndpoint = apiurl + \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(serviceEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\n//import { register } from '../services/userService';\r\nimport * as userService from '../services/userService';\r\n\r\nclass RegisterForm extends Form {\r\n    state = { \r\n        data: { username: \"\", password: \"\",name: \"\"},\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string()\r\n            .required()\r\n            .email()\r\n            .label('Username'),\r\n        password: Joi.string()\r\n            .required()\r\n            .min(5)\r\n            .label('Password'),\r\n        name: Joi.string()\r\n            .required()\r\n            .label('Name')\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            await userService.register(this.state.data)\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors }; \r\n                errors.username = ex.response.data;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n        \r\n    };\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Register</h1>         \r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password','password')}\r\n                    {this.renderInput('name', 'Name')}\r\n                    {this.renderButton(\"Register\")}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default RegisterForm;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { login } from '../services/authService';\r\n\r\nclass LoginForm extends Form {\r\n    state = { \r\n        data: { username: \"\", password: \"\"},\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password')\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;\r\n            const { data: jwt } = await login( data.username, data.password );\r\n            console.log(jwt)\r\n            localStorage.setItem('token',jwt)\r\n            this.props.history.push(\"/\");\r\n        } catch(ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors };\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1>Login</h1>         \r\n                <form onSubmit={this.handleSubmit}>\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password','password')}\r\n                    {this.renderButton(\"Login\")}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default LoginForm;","import React from 'react';\r\n\r\nconst Customers = () => {\r\n    return (  \r\n        <h1>Customers</h1>\r\n    );\r\n}\r\n\r\n \r\nexport default Customers;\r\n","import React, { Component } from 'react';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        localStorage.removeItem('token');\r\n\r\n        window.location = '/';\r\n    }\r\n    render() { \r\n        return null;\r\n    }\r\n}\r\n \r\nexport default Logout;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return (  \r\n        <h1>Rentals</h1>\r\n    );\r\n}\r\n \r\nexport default Rentals;","import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Movies from \"./components/movies\";\r\nimport MovieForm from \"./components/movieForm\";\r\nimport NavBar from \"./components/common/navbar\";\r\nimport Home from \"./components/home\";\r\nimport Dashboard from \"./components/admin/dashboard\";\r\nimport RegisterForm from \"./components/registerForm\";\r\nimport NotFound from \"./components/notFound\";\r\nimport LoginForm from \"./components/loginForm\";\r\nimport Logout from \"./components/logout\";\r\nimport Customers from \"./components/customers\";\r\nimport Rentals from \"./components/rentals\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\n\r\nconst djurl = \"/vidly\"\r\n\r\nclass VidlyApp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar djurl={djurl}/>\r\n        <div className=\"container\">\r\n          <Switch>\r\n            <Route path={`${djurl}/movies/:id`} component={MovieForm} />\r\n            <Route path={`${djurl}/home`} component={Home} />\r\n            <Route path={`${djurl}/not-found`} component={NotFound} />\r\n            <Route path={`${djurl}/movies`} component={Movies} />\r\n            <Route path={`${djurl}/rentals`} component={Rentals} />\r\n            <Route path={`${djurl}/customers`} component={Customers} />\r\n            <Route path={`${djurl}/login`} component={LoginForm} />\r\n            {/* <Route path=\"/logout\" component={Logout} /> */}\r\n            <Route path={`${djurl}/register`} component={RegisterForm} />\r\n            {/* <Route path=\"/dashboard\" component={Dashboard} /> */}\r\n            <Redirect from={`${djurl}/`} exact to={`${djurl}/movies`} />\r\n            <Redirect to={`${djurl}/not-found`} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VidlyApp;\r\n","export function verifyTextInputType (inputType) {\r\n    switch (inputType) {\r\n      case 'text':\r\n        return true;\r\n      case 'email':\r\n        return true\r\n      case 'number':\r\n        return true\r\n      case 'textarea':\r\n        return true\r\n      default:\r\n        return false\r\n    }\r\n  }","import React, {useEffect, useState} from 'react';\r\n\r\nimport {\r\n  SurveyTextInput,\r\n  SurveyRadioInput,\r\n  SurveySelectInput\r\n} from './index';\r\n\r\nimport { verifyTextInputType } from './validators';\r\n\r\nexport const Survey = (props) => {\r\n  const [page, setPage] = useState(1)\r\n  const [isFinalPage, setIsFinalPage] = useState(false)\r\n  const [surveyValues, setSurveyValues] = useState({})\r\n  const [loadedInputs, setLoadedInputs] = useState([])\r\n\r\n  const {surveyId} = props\r\n\r\n  useEffect(()=>{\r\n    if (surveyId){\r\n      // check if its a file going forward we would use api request\r\n      const inputDataFile = import(`../data/survey_${surveyId}.json`)\r\n      // http request\r\n      inputDataFile.then(response=>{\r\n        // set the new inputs list data\r\n        setLoadedInputs(response.default)\r\n      })\r\n    }\r\n  })\r\n\r\n  const triggerBackendUpdate = () => {\r\n    console.log('your done',surveyValues)\r\n    alert(\"Thank you!\")\r\n    // assume backend updated\r\n    setPage(1)\r\n    setSurveyValues({})\r\n    setIsFinalPage(false)\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    event.persist()\r\n    for (let formInput of event.target.elements){\r\n      const verifyType = verifyTextInputType(formInput.type)\r\n      if (verifyType) {\r\n        surveyValues[formInput.name] = formInput.value\r\n      }\r\n\r\n      if (formInput.type === 'select-one') {\r\n        console.log(formInput.name, formInput.value)\r\n        surveyValues[formInput.name] = formInput.value\r\n      }\r\n\r\n      if (formInput.type === 'select-multiple') {\r\n        const selected = [].filter.call(formInput.options, option=>option.selected)\r\n        const values = selected.map(option => option.value)\r\n        surveyValues[formInput.name] = values\r\n      }\r\n      if (formInput.checked) {\r\n        // console.log(formInput.name, formInput.value)\r\n        surveyValues[formInput.name] = formInput.value\r\n      }\r\n      setSurveyValues(surveyValues)\r\n      const nextPage = page + 1\r\n      const inputs = loadedInputs ? loadedInputs.filter(inputOption => inputOption.page === nextPage) : []\r\n\r\n      if (isFinalPage) {\r\n        triggerBackendUpdate()\r\n      } else { \r\n        if (inputs.length === 0) {\r\n          setIsFinalPage(true)\r\n        } else {\r\n          setPage(nextPage)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  const inputs = loadedInputs ? loadedInputs.filter(inputOption => inputOption.page === page) : []\r\n  return <form onSubmit={handleSubmit}>\r\n    {isFinalPage !== true && inputs.map((obj, index)=> {\r\n    //animation\r\n    const className = 'form-control mb-2 animate__animated animate__fadeIn'\r\n\r\n    const inputKey = `input-${index}-${page}`\r\n    return (obj.type === 'radio' || obj.type === 'checkbox' ) ?\r\n      <SurveyRadioInput \r\n        object={obj}  \r\n        key={inputKey}\r\n        className={className}\r\n        {...obj}\r\n      />\r\n\r\n      :\r\n\r\n      (obj.type === 'select') ?\r\n      \r\n      <SurveySelectInput \r\n        className={className}\r\n        object={obj}  \r\n        key={inputKey}\r\n        {...obj}\r\n      />\r\n      :\r\n      \r\n      <SurveyTextInput\r\n      className={className}\r\n      key={inputKey}\r\n      {...obj}\r\n      />\r\n    })\r\n  }\r\n\r\n  {isFinalPage === true &&\r\n    <p>Are you finished?</p>\r\n  }\r\n\r\n  <button\r\n  name='save_btn'\r\n  type='submit' \r\n  className='btn btn-primary my-5 animate__animated animate__fadeIn animate__delay-2s'>{isFinalPage === true ? \"Save\" : \"Contine\"}</button>\r\n  </form>\r\n}","import React from 'react';\r\n\r\nimport { useInputChange } from './hooks';\r\nimport { verifyTextInputType } from './validators';\r\n\r\n\r\nexport const SurveySelectInput = props => {\r\n    const {object} = props\r\n    return <select name={object.name} className={props.className} multiple={object.multiple}>\r\n      <option hidden value>Select an Option</option>\r\n        {object.options.map((data, index) => {\r\n          return <option \r\n            value={data.value}\r\n              id={`${object.name}-${index}`}\r\n              className={`form-check ${props.optionClassName}`}\r\n              key={`${object.type}-${index}`}>\r\n              {data.label}\r\n          </option>\r\n        })}\r\n    </select>\r\n}\r\n  \r\n  \r\nexport  const SurveyRadioInput = props => {\r\n    const {object} = props\r\n    return <div className={props.className}>\r\n        {object.options.map((data, index) => {\r\n            return <div className={`form-check ${props.optionClassName}`}\r\n            key={`${object.type}-${index}`}>\r\n            <input \r\n            className='form-check-input'\r\n            type={object.type}\r\n            required={props.required}\r\n            value={data.value} \r\n            name={object.name}\r\n            id={`${object.name}-${index}`}\r\n            />\r\n            <label \r\n                className='form-check-label' \r\n                htmlFor={`${object.name}-${index}`}>\r\n                {data.label}\r\n                </label>\r\n            </div>\r\n        })}\r\n    </div>\r\n}\r\n\r\n\r\nexport  const SurveyTextInput = props => {\r\n    const { value, handleChange } = useInputChange(props.defaultValue,props.triggerCallback)\r\n    const inputType = verifyTextInputType(props.type) ? props.type : 'text'\r\n    const inputProps = {\r\n        className: props.className ? props.className : 'form-control',\r\n        onChange: handleChange,\r\n        required: props.requred,\r\n        value: value,\r\n        type: inputType,\r\n        placeholder: props.placeholder ? props.placeholder : 'Your text...',\r\n        name: props.name ? props.name : `${inputType}_${props.key}`\r\n    }\r\n    return inputType === 'textarea' ?\r\n    <textarea\r\n        {...inputProps}\r\n    /> :\r\n\r\n    <input\r\n        {...inputProps}\r\n        />\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport const useInputChange = (customValue, callback) => {\r\n  const [value, setValue] = useState(customValue ? customValue : \"\")\r\n  const handleChange = event => {\r\n    const newValue = event.target.value\r\n    setValue(newValue)\r\n    if (callback) {\r\n      callback(event.target.name,newValue)\r\n    }\r\n  }\r\n  return  {\r\n    value: value,\r\n    handleChange: handleChange\r\n  }\r\n\r\n}","import React from 'react'\n\nimport {\n  Survey ,\n} from './survey';\n\nconst SurveyApp = (props) => {\n  return <div className='col-6 mx-auto text-center'>\n    <h1 className=\"mb-5\">Hello There</h1>\n    <Survey surveyId={1} /> \n  </div>\n}\n\nexport default SurveyApp;\n\n","import React from \"react\";\n\nconst NavBar = () => {\n  return (\n    <ul>\n      <li>\n        <a href=\"/\">Home</a>\n      </li>\n      <li>\n        <a href=\"/products\">Products</a>\n      </li>\n      <li>\n        <a href=\"/posts/2018/06\">Posts</a>\n      </li>\n      <li>\n        <a href=\"/admin\">Admin</a>\n      </li>\n    </ul>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass Products extends Component {\n  state = {\n    products: [\n      { id: 1, name: \"Product 1\" },\n      { id: 2, name: \"Product 2\" },\n      { id: 3, name: \"Product 3\" }\n    ]\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Products</h1>\n        <ul>\n          {this.state.products.map(product => (\n            <li key={product.id}>\n              <a href={`/products/${product.id}`}>{product.name}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Products;\n","import React from \"react\";\n\nconst Posts = () => {\n  return (\n    <div>\n      <h1>Posts</h1>\n      Year: , Month:\n    </div>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\n\nconst Home = () => {\n  return <h1>Home</h1>;\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Dashboard = ({ match }) => {\n  return (\n    <div>\n      <h1>Admin Dashboard</h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport Products from \"./components/products\";\r\nimport Posts from \"./components/posts\";\r\nimport Home from \"./components/home\";\r\nimport Dashboard from \"./components/admin/dashboard\";\r\nimport ProductDetails from \"./components/productDetails\";\r\nimport NotFound from \"./components/notFound\";\r\nimport \"./App.css\";\r\n\r\nclass RouteDemoApp extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div className=\"content\">\r\n            <Switch>\r\n                <Route path=\"/products\" component={Products} />\r\n                <Route path=\"/posts\" component={Posts} />\r\n                <Route path=\"/admin\" component={Dashboard} />\r\n                <Route path=\"/\" component={Home} />\r\n            </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RouteDemoApp;\r\n","import React, { Component } from \"react\";\n\nclass ProductDetails extends Component {\n  handleSave = () => {\n    // Navigate to /products\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Product Details - </h1>\n        <button onClick={this.handleSave}>Save</button>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetails;\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass PostInline extends Component {\r\n    render() { \r\n        // const {title} = this.props\r\n        const {post} = this.props\r\n        const {elClass} = this.props\r\n        const {showContent} = elClass === 'card' ? 'd-block' : 'd-none'\r\n        return ( \r\n            <div>\r\n                {post !== undefined ? <div className={elClass}>\r\n                    {/* <h1><Link to={{\r\n                        pathname:`/posts/${post.slug}`,\r\n                        state: {fromDashboard: false}\r\n                    }}>{post.title}</Link></h1> */}\r\n                    <h1>Title {post.title}</h1>\r\n                    <p className={showContent}>{post.content}</p>\r\n                    </div>\r\n                    : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default PostInline;","import React, { Component } from 'react';\r\nimport 'whatwg-fetch'\r\nimport cookie from 'react-cookies'\r\nimport { Link } from 'react-router-dom'\r\nimport PostInline from './PostInline'\r\n\r\nclass Posts extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.togglePostListClass = this.togglePostListClass.bind(this)\r\n        this.handleNewPost = this.handleNewPost.bind(this)\r\n        this.loadMorePosts =this.loadMorePosts.bind(this)\r\n        this.state = {\r\n            posts: [],\r\n            postsListClass: \"card\",\r\n            next: null,\r\n            previous: null,\r\n            author: false,\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    loadMorePosts(){\r\n        const {next} = this.state \r\n        if (next !== null || next !== undefined) {\r\n            this.loadPosts(next)\r\n        }\r\n       \r\n    }\r\n    \r\n    loadPosts(nextEndpoint){\r\n        let endpoint = '/api/posts/' \r\n        if (nextEndpoint !== undefined) {\r\n            endpoint = nextEndpoint\r\n        }\r\n        let thisComp = this\r\n        let lookupOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const csrfToken = cookie.load('csrftoken')\r\n        if (csrfToken !== undefined) {\r\n            lookupOptions['credentials'] = 'include'\r\n            lookupOptions['headers']['X-CSRFToken'] = csrfToken\r\n        }\r\n\r\n        fetch(endpoint, lookupOptions)\r\n        .then(function(response){\r\n            return response.json()\r\n        }).then(function(responseData){\r\n            console.log(responseData)\r\n            //let currentPosts = thisComp.state.posts\r\n            // let newPosts = currentPosts.concat(responseData.results)\r\n            // console.log(currentPosts)\r\n            thisComp.setState({\r\n                    posts: thisComp.state.posts.concat(responseData.results),\r\n                    next: responseData.next,\r\n                    previous: responseData.previous,\r\n                    author: responseData.author,\r\n                    count: responseData.count\r\n                })\r\n        })\r\n    }\r\n\r\n    handleNewPost(postItemData){\r\n        // console.log(postItemData)\r\n        let currentPosts = this.state.posts\r\n        currentPosts.unshift(postItemData) // unshift\r\n        this.setState({\r\n            posts: currentPosts\r\n        })\r\n    }\r\n\r\n  \r\n\r\n    togglePostListClass(event){\r\n        event.preventDefault()\r\n        let currentListClass = this.state.postsListClass\r\n        if (currentListClass === \"\"){\r\n            this.setState({\r\n                postsListClass: \"card\",\r\n            })\r\n        } else {\r\n            this.setState({\r\n                postsListClass: \"\",\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            posts: [],\r\n            postsListClass: \"card\",\r\n            next: null,\r\n            previous: null,\r\n            author: false,\r\n            count: 0\r\n        })\r\n        this.loadMorePosts()\r\n    }\r\n    render() {\r\n        const {posts} = this.state\r\n        const {postsListClass} = this.state\r\n        const {author} = this.state\r\n        const {next} = this.state \r\n    return (\r\n      <div>\r\n          {author === true ? <Link className='mr-2' maintainScrollPosition={false} to={{\r\n                    pathname: `/posts/create/`,\r\n                    state: { fromDashboard: false }\r\n                  }}>Create Post</Link> : \"\"}\r\n          \r\n          <button onClick={this.togglePostListClass}>Toggle Class</button>\r\n          {posts.length > 0 ? posts.map((postItem, index)=>{\r\n              return (\r\n                      <PostInline post={postItem} elClass={postsListClass} />\r\n              )\r\n          }) : <p>No Posts Found</p>}\r\n          {next !== null ? <button onClick={this.loadMorePosts}>Load more</button> : ''}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\nimport 'whatwg-fetch';\r\nimport cookie from 'react-cookies';\r\nimport moment from 'moment';\r\n\r\nclass PostForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleDraftChange = this.handleDraftChange.bind(this)\r\n        this.clearForm = this.clearForm.bind(this)\r\n        this.postTitleRef = React.createRef()\r\n        this.postContentRef = React.createRef()\r\n        this.state = {\r\n            draft: false,\r\n            title: null,\r\n            content: null,\r\n            publish: null,\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    createPost(data){\r\n        const endpoint = '/api/posts/'\r\n        const csrfToken = cookie.load('csrftoken')\r\n        let thisComp = this\r\n        if (csrfToken !== undefined){\r\n            let lookupOptions = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRFToken': csrfToken\r\n                },\r\n                body: JSON.stringify(data),\r\n                credentials: 'include'\r\n            }\r\n\r\n            fetch(endpoint, lookupOptions)\r\n            .then(function(response){\r\n                return response.json()\r\n            }).then(function(responseData){\r\n                console.log(responseData)\r\n                if (thisComp.props.newPostItemCreated){\r\n                    thisComp.props.newPostItemCreated(responseData)\r\n                }\r\n                thisComp.defaultState()\r\n                thisComp.clearForm()\r\n            }).catch(function(error){\r\n                //console.log(error)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    updatePost(data){\r\n        const {post} = this.props\r\n        const endpoint = `/api/posts/${post.slug}/`\r\n        const csrfToken = cookie.load('csrftoken')\r\n        let thisComp = this\r\n        if (csrfToken !== undefined){\r\n            let lookupOptions = {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRFToken': csrfToken\r\n                },\r\n                body: JSON.stringify(data),\r\n                credentials: 'include'\r\n            }\r\n\r\n            fetch(endpoint, lookupOptions)\r\n            .then(function(response){\r\n                return response.json()\r\n            }).then(function(responseData){\r\n                console.log(responseData)\r\n                if (thisComp.props.postItemUpdated){\r\n                    thisComp.props.postItemUpdated(responseData)\r\n                }\r\n                //thisComp.clearForm()\r\n            }).catch(function(error){\r\n                //console.log(error)\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        console.log(this.state)\r\n        let data = this.state\r\n\r\n        const {post} = this.props\r\n        if (post !== undefined){\r\n            this.updatePost(data)\r\n        } else {\r\n            //\r\n        }\r\n    }\r\n\r\n    handleInputChange(event){\r\n        event.preventDefault()\r\n        console.log(event.target.name, event.target.value)\r\n        let key = event.target.name\r\n        let value = event.target.value\r\n        if (key === 'title'){\r\n            if (value.length > 120){\r\n                alert(\"This title is too long\")\r\n            }\r\n        }\r\n        this.setState({\r\n            [key]: value\r\n        })\r\n    }\r\n\r\n    handleDraftChange(){\r\n        this.setState({\r\n            draft: !this.state.draft  //allways toggle\r\n        })\r\n    }\r\n\r\n    clearForm(e){\r\n        if (e){\r\n            e.preventDefault()\r\n        }\r\n        this.postCreateForm.reset()\r\n        this.defaultState()\r\n    }\r\n\r\n    clearFormRefs(){\r\n        this.postTitleRef.current=''\r\n        this.postContentRef.current=''\r\n    }\r\n\r\n    defaultState(){\r\n        this.setState({\r\n            draft: false,\r\n            title: null,\r\n            content: null,\r\n            publish:  moment(new Date()).format('YYYY-MM-DD'),\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {post} = this.props\r\n        if (post !== undefined){\r\n            this.setState({\r\n                draft: post.draft,\r\n                title: post.title,\r\n                content: post.content,\r\n                publish:  moment(post.publish).format('YYYY-MM-DD'),\r\n            })\r\n        } else {\r\n            this.defaultState()\r\n        }\r\n        //this.postTitleRef.current.focus()\r\n    }\r\n    \r\n    render() { \r\n        const {publish} = this.state\r\n        const {title} = this.state\r\n        const {content} = this.state\r\n        const cancelClass = this.props.post === undefined ? \"d-none\" : \"\"\r\n        let thisComp = this\r\n        return ( \r\n        <div>\r\n            <form \r\n                onSubmit={this.handleSubmit}\r\n                ref={(el) => this.postCreateForm = el}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label for='title'>Post Title</label>\r\n                    <input \r\n                        type='text' \r\n                        id='title' \r\n                        name='title'\r\n                        value={title}\r\n                        className='form-control' \r\n                        placeholder='title' \r\n                        ref = {this.postTitleRef}\r\n                        onChange={this.handleInputChange}\r\n                        required=\"required\"\r\n                        />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for='content'>Content</label>\r\n                    <textarea \r\n                        id='content' \r\n                        name='content'\r\n                        value={content}\r\n                        className='form-control' \r\n                        placeholder='Post Content'\r\n                        ref = {this.postContentRef}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for='draft'>\r\n                    <input \r\n                        type='checkbox'\r\n                        checked={this.state.draft}\r\n                        id='draft' \r\n                        name='title' \r\n                        className='form-control' \r\n                        onChange={this.handleInputChange} \r\n                        required=\"required\"\r\n                        />\r\n                        Draft</label>\r\n                        <button onClick={(e)=>{e.preventDefault(); this.handleDraftChange()}}>Toggle Draft</button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for='publish'>Publish Date</label>\r\n                    <input \r\n                        type='date' \r\n                        id='publish' \r\n                        name='publish' \r\n                        className='form-control' \r\n                        onChange={this.handleInputChange} \r\n                        value={publish}\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-primary\">Save</button>\r\n                <button className=\"btn btn-danger\" onClick={this.clearForm}>Clear</button>\r\n            </form>\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default PostForm;","import React, { Component } from 'react';\r\nimport 'whatwg-fetch';\r\nimport cookie from 'react-cookies';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport PostForm from './PostForm'\r\n\r\nclass PostDetail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handlePostItemUpdated= this.handlePostItemUpdated.bind(this)\r\n        this.state = {\r\n            slug: null,\r\n            post: null,\r\n            doneLoading: false\r\n        }\r\n    }\r\n    handlePostItemUpdated(postItemData){\r\n        this.setState({\r\n            post: postItemData\r\n        })\r\n    }\r\n    loadPost(slug){\r\n        const endpoint = `/api/posts/${slug}/`\r\n        let thisComp = this\r\n        let lookupOptions = {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const csrfToken = cookie.load('csrftoken')\r\n        if (csrfToken !== undefined) {\r\n            lookupOptions['credentials'] = 'include'\r\n            lookupOptions['headers']['X-CSRFToken'] = csrfToken\r\n        }\r\n\r\n        fetch(endpoint, lookupOptions)\r\n        .then(function(response){\r\n            if (response.status === 404){\r\n                console.log('Page not found')\r\n            }\r\n            return response.json()\r\n        }).then(function(responseData){\r\n            console.log('resp data',responseData)\r\n            if (responseData.detail){\r\n                thisComp.setState({\r\n                    doneLoading:true,\r\n                    post: responseData\r\n                })\r\n            } else {\r\n                thisComp.setState({\r\n                    doneLoading: true,\r\n                    posts: responseData\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            slug: null,\r\n            post: null\r\n        })\r\n        if (this.props.match){\r\n            const {slug} = this.props.match.params\r\n            this.setState({\r\n                slug: slug,\r\n                doneLoading:false\r\n            })\r\n            this.loadPost(slug)\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const {doneLoading} = this.state\r\n        const {post} = this.state\r\n\r\n        return ( \r\n            <p>{(doneLoading === true) ? <div>\r\n                {post === null ? \"Not Found\" :\r\n                <div>\r\n                    <h1>{post.title}</h1>\r\n                    {post.slug}\r\n                    \r\n                    <Link to={{\r\n                        pathname: `/posts`,\r\n                        state: { fromDashboard: false }\r\n                    }}>Posts</Link>\r\n\r\n                    <Link to={{\r\n                        pathname: `/posts/create/`,\r\n                        state: { fromDashboard: false }\r\n                    }}>Create Posts</Link>\r\n\r\n                    {post.owner === true ? <PostForm post={post} postItemUpdated={this.handlePostItemUpdated} /> : \"\"}\r\n                </div>\r\n                }\r\n                </div> : \"Loading...\"}\r\n            </p>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostDetail;","import React, { Component } from 'react';\r\nimport PostForm from './PostForm';\r\n\r\nclass PostCreate extends Component {\r\n    render() { \r\n        return ( <div>\r\n            <h1>Create Post</h1>\r\n            <PostForm />\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default PostCreate;\r\n\r\n// left for REFERNCE\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import 'whatwg-fetch';\r\n// import cookie from 'react-cookies';\r\n// import moment from 'moment';\r\n\r\n\r\n// class PostCreate extends Component {\r\n//     constructor(props){\r\n//         super(props)\r\n//         this.handleSubmit = this.handleSubmit.bind(this)\r\n//         this.handleInputChange = this.handleInputChange.bind(this)\r\n//         this.clearForm = this.clearForm.bind(this)\r\n//         this.postTitleRef = React.createRef()\r\n//         this.postContentRef = React.createRef()\r\n//         this.state = {\r\n//             draft: false,\r\n//             title: null,\r\n//             content: null,\r\n//             publish: null,\r\n//             errors: {}\r\n//         }\r\n//     }\r\n\r\n//     createPost(){\r\n//         const endpoint = '/api/posts/'\r\n//         const csrfToken = cookie.load('csrftoken')\r\n//         let thisComp = this\r\n//         if (csrfToken !== undefined){\r\n//             let lookupOptions = {\r\n//                 method: \"POST\",\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     'X-CSRFToken': csrfToken\r\n//                 },\r\n//                 body: JSON.stringify(data),\r\n//                 credentials: 'include'\r\n//             }\r\n\r\n//             fetch(endpoint, lookupOptions)\r\n//             .then(function(response){\r\n//                 return response.json()\r\n//             }).then(function(responseData){\r\n//                 console.log(responseData)\r\n//                 if (thisComp.props.newPostItemCreated){\r\n//                     thisComp.props.newPostItemCreated(responseData)\r\n//                 }\r\n//                 thisComp.clearForm()\r\n//             }).catch(function(error){\r\n//                 //console.log(error)\r\n//             })\r\n//         }\r\n\r\n//     }\r\n\r\n//     handleSubmit(event){\r\n//         event.preventDefault()\r\n//         console.log(this.state)\r\n//         let data = this.state\r\n//         this.createPost(data)\r\n//     }\r\n\r\n//     handleInputChange(event){\r\n//         event.preventDefault()\r\n//         console.log(event.target.name, event.target.value)\r\n//         let key = event.target.name\r\n//         let value = event.target.value\r\n//         if (key === 'title'){\r\n//             if (value.length > 120){\r\n//                 alert(\"This title is too long\")\r\n//             }\r\n//         }\r\n//         this.setState({\r\n//             [key]: value\r\n//         })\r\n//     }\r\n\r\n//     handleDraftChange(){\r\n//         this.setState({\r\n//             draft: !this.state.draft  //allways toggle\r\n//         })\r\n//     }\r\n\r\n//     clearForm(e){\r\n//         if (e){\r\n//             e.preventDefault()\r\n//         }\r\n//         this.postCreateForm.reset()\r\n//     }\r\n\r\n//     clearFormRefs(){\r\n//         this.postTitleRef.current=''\r\n//         this.postContentRef.current=''\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         this.setState({\r\n//             draft: false,\r\n//             title: null,\r\n//             content: null,\r\n//             publish:  moment(new Date()).format('YYYY-MM-DD'),\r\n//         })\r\n//         this.postTitleRef.current.focus()\r\n//     }\r\n    \r\n//     render() { \r\n//         const {publish} = this.state\r\n//         return ( \r\n//         <div>\r\n//             <form \r\n//                 onSubmit={this.handleSubmit}\r\n//                 ref={(el) => this.postCreateForm = el}\r\n//             >\r\n//                 <div className=\"form-group\">\r\n//                     <label for='title'>Post Title</label>\r\n//                     <input \r\n//                         type='text' \r\n//                         id='title' \r\n//                         name='title' \r\n//                         className='form-control' \r\n//                         placeholder='title' \r\n//                         ref = {this.postTitleRef}\r\n//                         onChange={this.handleInputChange}\r\n//                         required=\"required\"\r\n//                         />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label for='content'>Content</label>\r\n//                     <textarea \r\n//                         id='content' \r\n//                         name='content' \r\n//                         className='form-control' \r\n//                         placeholder=''\r\n//                         ref = {this.postContentRef}\r\n//                     />\r\n\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label for='draft'>\r\n//                     <input \r\n//                         type='checkbox'\r\n//                         checked={this.state.draft}\r\n//                         id='draft' \r\n//                         name='title' \r\n//                         className='form-control' \r\n//                         onChange={this.handleInputChange} \r\n//                         required=\"required\"\r\n//                         />\r\n//                         Draft</label>\r\n//                         <button onClick={(e)=>{e.preventDefault(); this.handleDraftChange()}}>Toggle Draft</button>\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label for='publish'>Publish Date</label>\r\n//                     <input \r\n//                         type='date' \r\n//                         id='publish' \r\n//                         name='publish' \r\n//                         className='form-control' \r\n//                         onChange={this.handleInputChange} \r\n//                         value={publish}\r\n//                         required=\"required\"\r\n//                     />\r\n//                 </div>\r\n//                 <button className=\"btn btn-primary\">Save</button>\r\n//                 <button className=\"btn btn-danger\" onClick={this.clearForm}>Cancel</button>\r\n//             </form>\r\n//         </div> \r\n//         );\r\n//     }\r\n// }\r\n \r\n// export default PostCreate;","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nimport Posts from './posts';\r\nimport PostDetail from './PostDetail';\r\nimport PostCreate from './PostCreate';\r\n\r\nclass PostsApp extends Component {\r\n    render () {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path='/posts/create' component={PostCreate} />\r\n                    <Route exact path='/posts' component={Posts} />\r\n                    <Route exact path='/posts/:slug' component={PostDetail}/>\r\n                    <Route component={Posts}/>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostsApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport VidlyApp from './modules/vidly/VidlyApp';\nimport SurveyApp from './modules/survey/SurveyApp';\nimport RouteDemoApp from './modules/routingdemo/RouteDemoApp';\nimport PostsApp from './modules/posts/PostsApp';\n\n// const reactRootEl = document.getElementById(\"root\")\n// if (reactRootEl){\n//   ReactDOM.render(\n//     <Router>\n//       <App />\n//     </Router>\n//   ,reactRootEl)\n// }\n\nconst vidlyAppEl = document.getElementById(\"vidlyapp\")\nif (vidlyAppEl){\n  ReactDOM.render(<Router><VidlyApp/></Router>,vidlyAppEl)  \n}\nconst surveyAppEl = document.getElementById(\"surveyapp\")\nif (surveyAppEl){\n  ReactDOM.render(<Router><SurveyApp/></Router>,surveyAppEl)  \n}\nconst routingDemoEl = document.getElementById(\"routing-demo\")\nif (routingDemoEl){\n  ReactDOM.render(<Router><RouteDemoApp/></Router>,routingDemoEl)  \n}\nconst postsAppEl = document.getElementById(\"postsapp\")\nif (postsAppEl){\n  ReactDOM.render(<Router><PostsApp/></Router>,postsAppEl)  \n}\n// const chartDemoEl = document.getElementById(\"chartdemo\")\n// if (chartDemoEl){\n//   ReactDOM.render(<Router><ChartDemoApp/></Router>,chartDemoEl)  \n// }\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}